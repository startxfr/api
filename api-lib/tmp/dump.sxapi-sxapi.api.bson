{ "_id" : "startx", "contact" : { "name" : "Christophe", "mail" : "cl@startx.fr", "tel" : "+33146690000" }, "desc" : "Private API for STARTX Information System", "inputs" : [ { "id" : "request", "class" : "SmartInput", "default" : true }, { "id" : "session", "class" : "SessionInput", "collection" : "sxapi.session", "session_name" : "startxapi", "timeout" : 12000, "auto_extend_timeout" : true }, { "id" : "application", "class" : "ApplicationInput", "collection" : "sxapi.application", "supported" : [ "startx-webmobile", "startx-web" ], "default_client" : "startx-web" }, { "id" : "user", "class" : "UserInput", "store" : "startx", "collection" : "users", "id_field" : "_id" } ], "logs_collection" : "sxapi.logs", "model_collection" : "sxapi.models", "name" : "sxapi", "outputs" : [ { "id" : "html", "class" : "HtmlOutput" }, { "id" : "json", "class" : "JsonOutput", "default" : true }, { "id" : "xml", "class" : "XmlOutput" } ], "owner" : "STARTX", "ressource_collection" : "sxapi.ressources", "stores" : [ { "id" : "mysql", "class" : "mysqlStore", "server" : "127.0.0.1", "username" : "dev", "passwd" : "dev", "base" : "DEV_sxapi" }, { "id" : "startx", "class" : "nosqlStore", "default" : true, "server" : "127.0.0.1", "port" : "27017", "username" : "dev", "passwd" : "dev", "base" : "startx" }, { "id" : "api", "class" : "nosqlStore", "default" : true, "server" : "127.0.0.1", "port" : "27017", "username" : "dev", "passwd" : "dev", "base" : "sxapi" } ], "tree" : { "path" : "/", "ressource" : "startx", "acl" : { "application" : "startx-web" }, "children" : [ { "path" : "api", "ressource" : "startx.api", "children" : [ { "path" : "tree", "ressource" : "startx.api.tree" }, { "path" : "logs", "ressource" : "startx.api.logs" }, { "path" : "session", "ressource" : "startx.api.session", "children" : [ { "path" : "application", "ressource" : "startx.api.session.application" }, { "path" : "data", "ressource" : "startx.api.session.data" }, { "path" : "user", "ressource" : "startx.api.session.user" }, { "path" : "auth", "ressource" : "startx.api.session.auth" } ] } ] }, { "path" : "training", "ressource" : "startx.training", "children" : [ { "path" : "cursus", "ressource" : "startx.training.cursus" }, { "path" : "family", "ressource" : "startx.training.family" }, { "path" : "course", "ressource" : "startx.training.course" }, { "path" : "session", "ressource" : "startx.training.session" }, { "path" : "student", "ressource" : "startx.training.student" } ] }, { "path" : "batch", "ressource" : "startx.batch", "children" : [ { "path" : "updateRedhatSession", "ressource" : "startx.updateRedhatSession" } ] } ] }, "version" : "0.2" }
{ "_id" : "sxapi-0.5.1", "contact" : { "name" : "dev", "mail" : "clarue@startx.fr", "tel" : "+33146690000" }, "desc" : "Proof Of Concept to validate the cores functions of SXAPI framework. Should not be used as it is not ready for production and main part of this config are not anymore available. Please upgrade to a 0.5.2 version.", "inputs" : [ { "id" : "request", "class" : "SmartInput", "default" : true }, { "id" : "server", "class" : "ServerInput" }, { "id" : "session", "class" : "SessionInput", "session_name" : "sxapi", "timeout" : 3600, "auto_extend_timeout" : true }, { "id" : "application", "class" : "ApplicationInput", "supported" : [ "webmob-startx", "web-startx" ], "default_client" : "web-startx" }, { "id" : "user", "class" : "UserInput", "store" : "mongo-sxapi", "collection" : "sxapi.users", "id_field" : "id" } ], "name" : "sxapi", "outputs" : [ { "id" : "html", "class" : "HtmlOutput" }, { "id" : "json", "class" : "JsonOutput", "default" : true }, { "id" : "xml", "class" : "XmlOutput" } ], "owner" : "STARTX", "session" : { "name" : "sxapi", "store" : "default", "model" : "Session", "usermodel" : "User", "userstore" : "default", "userpwdcryptalg" : "md5sum" }, "stores" : [ { "id" : "mysql-sxapi", "class" : "MysqlStore", "server" : "127.0.0.1", "username" : "dev", "passwd" : "dev", "base" : "DEV_sxapi" }, { "id" : "mongo-sxapi", "class" : "NosqlStore", "default" : true, "server" : "127.0.0.1", "port" : "27017", "username" : "dev", "passwd" : "dev", "base" : "sxapi" } ], "tree" : { "path" : "/", "ressource" : "nodemapRessource", "message" : "welcome to the root element", "message_service" : "returning the API welcome message", "desc" : "the root path element. Display a welcome message", "acl" : { "application" : "web-startx,web" }, "children" : [ { "path" : "session", "ressource" : "infoSessionRessource", "message_service_noread" : "Reading session information is not allowed (method GET forbidden)", "message_service_nocreate" : "Creating session information is not allowed (method POST forbidden)", "message_service_noupdate" : "Updating session information is not allowed (method PUT forbidden)", "message_service_nodelete" : "Delete session information is not allowed (method DELETE forbidden)", "message_service_read" : "returning session '%s' information's", "message_service_create" : "created new session '%s'", "message_service_delete" : "session '%s' is now closed", "excluded_data" : [ "_id", "application", "user" ], "safeFilterInfo" : [ "_id", "data", "trace_cookie", "trace_first_request", "trace_last_request", "trace_server" ], "desc" : "Informations about the current session. Methods GET, POST and DELETE are supported to perform read, create and delete actions. Also, this node is central node for manipulating session properties as well as the user and the application that come together.", "acl" : false, "children" : [ { "path" : "application", "ressource" : "applicationSessionRessource", "message_service_read" : "returning %s application data from session '%s'", "message_service_create" : "Session '%s' is now associated with '%s' application", "message_service_update" : "Session '%s' is now associated with '%s' application", "message_service_errorcreate" : "error when trying to associate application '%2$s' with session '%1$s' because %3$s", "message_service_errorupdate" : "error when trying to move to application '%2$s' on session '%1$s' because %3$s", "desc" : "Informations about the application linked to the currently established session.  Methods GET, POST and PUT are supported to perform read, create and update actions", "children" : [ { "path" : "*", "desc" : "Allow for reading a specific key withing a single url and without passing additionnals parameters" } ] }, { "path" : "data", "ressource" : "dataSessionRessource", "message_service_read" : "returning %s session data from session '%s'", "message_service_create" : "added entry '%s' into session data", "message_service_update" : "updated entry '%s' into session data", "message_service_delete" : "removed entry '%s' from session data", "desc" : "Informations about the data recorded in the currently established session.  Methods GET, POST, PUT and DELETE are supported to perform read, create update and delete actions", "children" : [ { "path" : "*", "desc" : "Allow for reading a specific key withing a single url and without passing additionnals parameters" } ] }, { "path" : "user", "ressource" : "userSessionRessource", "message_service_read" : "returning %s user data from session '%s'", "desc" : "Informations about the user linked to the currently established session.  Methods GET is supported to perform read actions", "children" : [ { "path" : "*", "desc" : "Allow for reading a specific key withing a single url and without passing additionnals parameters" } ] }, { "path" : "auth", "ressource" : "defaultAuthenticateRessource", "store" : "mongo-sxapi", "collection" : "sxapi.users", "id_field" : "id", "pwd_field" : "pwd", "id_param" : "login", "pwd_param" : "pwd", "pwd_encryption" : "md5", "message_service_noid" : "you have to provide a user name using '%s' parameter", "message_service_nopwd" : "you have to provide a user password using '%s' parameter", "message_service_noread" : "Reading authentication is not allowed due to security restriction (method GET forbidden)", "message_service_create" : "successfully granted access for user '%s'", "message_service_update" : "successfully granted access for user '%s'", "message_service_nodelete" : "Deleting authentication is not allowed. See session for disconnecting this user (method DELETE forbidden)", "desc" : "This node allow authentication against default noSql backend. It allow user to login into the API and access to more ressources" } ] }, { "path" : "test", "ressource" : "messageRessource", "message" : "this is a test message", "message_service" : "returning an API test message", "desc" : "the test path element. Display a testing message", "acl" : { "user" : "dev" }, "children" : [ { "path" : "error", "ressource" : "errorTestRessource", "message" : "this is an error message", "error_code" : 999, "acl" : false, "desc" : "Test for error. This node always return an error" }, { "path" : "echo", "ressource" : "echoTestRessource", "message" : "received message was : %s", "message_service" : "returning back your message", "desc" : "always return a string with the input data when used a supported method", "acl" : false }, { "path" : "time", "ressource" : "timeTestRessource", "message_service" : "returning the server time", "date_format" : "d/m/Y H:i:s", "acl" : false, "desc" : "always return a date from the server" } ] } ] }, "version" : "0.5.1" }
{ "_id" : "sxapi-0.5.2", "contact" : { "name" : "dev", "mail" : "clarue@startx.fr", "tel" : "+33146690000" }, "desc" : "Functionnal framework with nosql and mysql store available. Many ressources dealing with api, logging, authentication, http and model. Should not be used as it is not ready for production and part of this configuration should be changed. Please upgrade to a 0.5.3 version.", "inputs" : [ { "id" : "request", "class" : "SmartInput", "default" : true }, { "id" : "server", "class" : "ServerInput" }, { "id" : "session", "class" : "SessionInput", "session_name" : "sxapi", "timeout" : 3600, "auto_extend_timeout" : true }, { "id" : "application", "class" : "ApplicationInput", "supported" : [ "webmob-startx", "web-startx" ], "default_client" : "web-startx" }, { "id" : "user", "class" : "UserInput", "store" : "mysql-sxapi", "collection" : "api_user", "id_field" : "login" } ], "name" : "sxapi", "outputs" : [ { "id" : "html", "class" : "HtmlOutput" }, { "id" : "json", "class" : "JsonOutput", "default" : true }, { "id" : "xml", "class" : "XmlOutput" } ], "owner" : "STARTX", "session" : { "name" : "sxapi", "store" : "default", "model" : "Session", "usermodel" : "User", "userstore" : "default", "userpwdcryptalg" : "md5sum" }, "stores" : [ { "id" : "mysql", "class" : "mysqlStore", "server" : "127.0.0.1", "username" : "dev", "passwd" : "dev", "base" : "DEV_sxapi" }, { "id" : "nosql", "class" : "nosqlStore", "default" : true, "server" : "127.0.0.1", "port" : "27017", "username" : "dev", "passwd" : "dev", "base" : "sxapi" }, { "id" : "googbig", "class" : "googlenosqlStore", "client_id" : "XXXXXXXXXXXXXXXXXXXX.apps.googleusercontent.com", "client_secret" : "XXXXXXXXXXXXXXXXXXXX", "server" : "127.0.0.1", "base" : "bas" }, { "id" : "curl-test", "class" : "curlStore", "url" : "http://docs.mongodb.org" } ], "tree" : { "path" : "/", "class" : "nodemapRessource", "message_service_read" : "returning the API welcome message", "desc" : "the root path element. Display a welcome message", "acl" : { "application" : "web-startx,web" }, "children" : [ { "path" : "session", "class" : "infoSessionRessource", "message_service_read" : "returning session '%s' information's", "message_service_create" : "created new session '%s'", "message_service_update" : "Updating session information is not allowed (method PUT forbidden)", "message_service_delete" : "session '%s' is now closed", "excluded_data" : [ "_id", "application", "user" ], "safeFilterInfo" : [ "_id", "data", "trace_cookie", "trace_first_request", "trace_last_request", "trace_server" ], "desc" : "Informations about the current session. Methods GET, POST and DELETE are supported to perform read, create and delete actions. Also, this node is central node for manipulating session properties as well as the user and the application that come together.", "acl" : false, "children" : [ { "path" : "application", "class" : "applicationSessionRessource", "message_service_read" : "returning %s application data from session '%s'", "message_service_create" : "Session '%s' is now associated with '%s' application", "message_service_update" : "Session '%s' is now associated with '%s' application", "message_service_delete" : "Delete session information is not allowed (method DELETE forbidden)", "message_service_errorcreate" : "error when trying to associate application '%2$s' with session '%1$s' because %3$s", "message_service_errorupdate" : "error when trying to move to application '%2$s' on session '%1$s' because %3$s", "desc" : "Informations about the application linked to the currently established session.  Methods GET, POST and PUT are supported to perform read, create and update actions", "children" : [ { "path" : "*", "desc" : "Allow for reading a specific key withing a single url and without passing additionnals parameters" } ] }, { "path" : "data", "class" : "dataSessionRessource", "message_service_read" : "returning %s session data from session '%s'", "message_service_create" : "added entry '%s' into session data", "message_service_update" : "updated entry '%s' into session data", "message_service_delete" : "removed entry '%s' from session data", "desc" : "Informations about the data recorded in the currently established session.  Methods GET, POST, PUT and DELETE are supported to perform read, create update and delete actions", "children" : [ { "path" : "*", "desc" : "Allow for reading a specific key withing a single url and without passing additionnals parameters" } ] }, { "path" : "user", "class" : "userSessionRessource", "message_service_read" : "returning %s user data from session '%s'", "message_service_create" : "Creating session information is not allowed (method POST forbidden)", "message_service_update" : "Updating session information is not allowed (method PUT forbidden)", "message_service_delete" : "Delete session information is not allowed (method DELETE forbidden)", "desc" : "Informations about the user linked to the currently established session.  Methods GET is supported to perform read actions", "children" : [ { "path" : "*", "desc" : "Allow for reading a specific key withing a single url and without passing additionnals parameters" } ] }, { "path" : "auth", "class" : "mysqlAuthenticateRessource", "store" : "mysql", "collection" : "api_user", "id_field" : "login", "pwd_field" : "pwd", "id_param" : "login", "pwd_param" : "pwd", "pwd_encryption" : "md5", "message_service_noid" : "you have to provide a user name using '%s' parameter", "message_service_nopwd" : "you have to provide a user password using '%s' parameter", "message_service_read" : "Reading authentication is not allowed due to security restriction (method GET forbidden)", "message_service_create" : "successfully granted access for user '%s'", "message_service_update" : "successfully granted access for user '%s'", "message_service_delete" : "Deleting authentication is not allowed. See session for disconnecting this user (method DELETE forbidden)", "desc" : "This node allow authentication against an authentication store. It allow user to login into the API and access to more ressources. Method GET  is not allowed due to security restriction." } ] }, { "path" : "api", "class" : "apiRessource", "exposed_keys" : [ "contact", "desc", "id", "version" ], "message_service_read" : "returning API informations", "desc" : "This node give information about the curently running API version and configuration", "acl" : { "application" : "web-startx" }, "children" : [ { "path" : "tree", "class" : "apiRessource", "exposed_keys" : [ "tree" ], "message_service_read" : "returning API tree informations", "desc" : "This node give information about the curently running API version and configuration" }, { "path" : "logs", "class" : "nosqlModelRessource", "model" : "logs", "search_params" : [ "type", "level", "code", "message", "ip", "session", "data" ], "message_service_read" : "returning %s logs entries on %s entries found", "message_service_create" : "created log entry '%s' ", "message_service_update" : "updated log entry '%s' ", "message_service_delete" : "deleted log entry '%s' ", "desc" : "This node give full read/write access to recorded logs", "children" : [ { "path" : "*", "desc" : "Allow for reading a specific key withing a single url and without passing additionnals parameters" } ] }, { "path" : "usertest", "class" : "mysqlModelRessource", "model" : "testUser", "search_params" : "login,lastname,firstname,civ,mail,right,isActive", "message_service_read" : "returning %s userttest entries on %s entries found", "message_service_create" : "created userttest entry '%s' ", "message_service_update" : "updated userttest entry '%s' ", "message_service_delete" : "deleted userttest entry '%s' ", "desc" : "This node give full read/write access to recorded userttest", "children" : [ { "path" : "*", "desc" : "Allow for reading a specific key withing a single url and without passing additionnals parameters" } ] } ] }, { "path" : "test", "class" : "messageRessource", "message" : "this is a test message", "message_service_read" : "returning an API test message", "desc" : "Test node who always return a testing message", "acl" : { "user" : "dev" }, "children" : [ { "path" : "proxy", "class" : "proxyHttpRessource", "store" : "curl-test", "url" : "http://docs.mongodb.org", "message_service_read" : "return the %s ressource", "message_service_create" : "add content to the %s ressource", "message_service_update" : "update content to the %s ressource", "message_service_delete" : "delete the %s ressource", "desc" : "Test node who return server-side request to the doncmongo homepage url", "url_path" : "manual/reference/operator/or/", "acl" : false }, { "path" : "redirect", "class" : "redirectHttpRessource", "url" : "http://docs.mongodb.org", "record" : { "store" : "nosql", "collection" : "redirect.hit" }, "message_service_read" : "redirect user to %s using GET method", "desc" : "Test node who redirect user to the docmongo homepage", "acl" : false }, { "path" : "error", "class" : "errorTestRessource", "message" : "this is an error message", "message_service_read" : "return an error", "error_code" : 999, "acl" : false, "desc" : "Test node who always return an error with a message and a code" }, { "path" : "echo", "class" : "echoTestRessource", "message" : "received message was : %s", "message_service_read" : "returning back your message", "desc" : "Test node who always return a string with the input data when used a supported method", "acl" : false }, { "path" : "time", "class" : "timeTestRessource", "message_service_read" : "returning the server time", "date_format" : "d/m/Y H:i:s", "acl" : false, "desc" : "Test node who always return the server's date" } ] } ] }, "version" : "0.5.2" }
{ "_id" : "sxapi-sample", "contact" : { "name" : "SXAPI Dev Team", "mail" : "dev@startx.fr", "tel" : "+33146690000" }, "desc" : "Generic implementation of main functionalities provided by the SXAPI Webservice Framework", "inputs" : [ { "id" : "request", "class" : "SmartInput", "default" : true }, { "id" : "server", "class" : "ServerInput" }, { "id" : "session", "class" : "SessionInput", "collection" : "sxapi.session", "session_name" : "sxapi", "timeout" : 3600, "auto_extend_timeout" : true }, { "id" : "application", "class" : "ApplicationInput", "collection" : "sxapi.application", "supported" : [ "sample-webmobile", "sample-web", "sample-web2", "sample-apimanager" ], "default_client" : "sample-web" }, { "id" : "user", "class" : "UserInput", "store" : "nosql-sample", "collection" : "sxapi.users", "id_field" : "_id" } ], "logs_collection" : "sxapi.logs", "model_collection" : "sxapi.models", "name" : "Sample SXAPI", "outputs" : [ { "id" : "html", "class" : "HtmlOutput" }, { "id" : "json", "class" : "JsonOutput", "default" : true }, { "id" : "xml", "class" : "XmlOutput" } ], "owner" : "STARTX", "ressource_collection" : "sxapi.ressources", "stores" : [ { "id" : "sample-mysql", "class" : "mysqlStore", "server" : "127.0.0.1", "username" : "dev", "passwd" : "dev", "base" : "DEV_sxapi2" }, { "id" : "sample-nosql", "class" : "nosqlStore", "default" : true, "server" : "127.0.0.1", "port" : "27017", "username" : "dev", "passwd" : "dev", "base" : "sxapi" }, { "id" : "sample-curl", "class" : "curlStore", "url" : "http://docs.mongodb.org" } ], "tree" : { "path" : "/", "ressource" : "sxapi", "acl" : { "application" : "sample-web,sample-webmobile,sample-apimanager" }, "children" : [ { "path" : "session", "ressource" : "sxapi.api.session", "acl" : false, "children" : [ { "path" : "application", "ressource" : "sxapi.api.session.application" }, { "path" : "data", "ressource" : "sxapi.api.session.data" }, { "path" : "user", "ressource" : "sxapi.api.session.user" }, { "path" : "auth", "ressource" : "sxapi.api.session.auth" } ] }, { "path" : "api", "ressource" : "sxapi.api", "children" : [ { "path" : "tree", "ressource" : "sxapi.api.tree" }, { "path" : "apis", "ressource" : "sxapi.api.apis" }, { "path" : "logs", "ressource" : "sxapi.api.logs" }, { "path" : "usertest", "ressource" : "sxapi.test.usertest" } ] }, { "path" : "test", "ressource" : "sxapi.test", "acl" : { "user" : "dev" }, "children" : [ { "path" : "proxy", "ressource" : "sxapi.test.proxy", "acl" : false }, { "path" : "redirect", "ressource" : "sxapi.test.redirect", "acl" : false }, { "path" : "error", "ressource" : "sxapi.test.error", "acl" : false }, { "path" : "echo", "ressource" : "sxapi.test.echo", "acl" : false }, { "path" : "time", "ressource" : "sxapi.test.time", "acl" : false } ] } ] }, "version" : "0.5.3" }
